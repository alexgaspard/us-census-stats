{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/statistics.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,4E;;;;;;;;;;;ACZA,mB;;;;;;;;;;;ACAA,ksBAAksB,SAAS,yB;;;;;;;;;;;;;;;;;;;;;;;;;ACAzpB;AACO;AAOzD;IAIE,sBAAoB,iBAAoC;QAApC,sBAAiB,GAAjB,iBAAiB,CAAmB;QAAG,IAAI,CAAC,OAAO,GAAG,EAAE,CAAC;IAAA,CAAC;IAE9E,+BAAQ,GAAR;QACE,IAAI,CAAC,aAAa,EAAE,CAAC;IACvB,CAAC;IAED,oCAAa,GAAb;QAAA,iBAQC;QAPC,IAAI,CAAC,iBAAiB,CAAC,IAAI,EAAE,CAAC,SAAS,CACrC,cAAI;YACF,KAAI,CAAC,OAAO,GAAG,IAAI,CAAC;QACtB,CAAC,EACD,aAAG,IAAI,cAAO,CAAC,KAAK,CAAC,GAAG,CAAC,EAAlB,CAAkB,EACzB,cAAM,cAAO,CAAC,GAAG,CAAC,sBAAsB,CAAC,EAAnC,CAAmC,CAC1C,CAAC;IACJ,CAAC;IAlBU,YAAY;QALxB,+DAAS,CAAC;YACT,QAAQ,EAAE,UAAU;;;SAGrB,CAAC;yCAKuC,qEAAiB;OAJ7C,YAAY,CAmBxB;IAAD,mBAAC;CAAA;AAnBwB;;;;;;;;;;;;;;;;;;;;;;;;;;;ACRiC;AACjB;AACe;AACX;AAEE;AACU;AAYzD;IAAA;IAAyB,CAAC;IAAb,SAAS;QAVrB,8DAAQ,CAAC;YACR,YAAY,EAAE;gBACZ,2DAAY;aACb;YACD,OAAO,EAAE;gBACP,uEAAa,EAAE,0DAAW,EAAE,qEAAgB;aAC7C;YACD,SAAS,EAAE,CAAC,qEAAiB,CAAC;YAC9B,SAAS,EAAE,CAAC,2DAAY,CAAC;SAC1B,CAAC;OACW,SAAS,CAAI;IAAD,gBAAC;CAAA;AAAJ;;;;;;;;;;;;;;;;;;;;;;;;;;AClByC;AACpB;AAG3C;IAEE,2BAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;IACpC,CAAC;IAED,0DAA0D;IAC1D,gCAAI,GAAJ;QACE,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC;IACrC,CAAC;IAED,4CAA4C;IAC5C,0CAAc,GAAd;QACE,MAAM,CAAC;YACL,OAAO,EAAE,IAAI,gEAAW,CAAC;gBACvB,cAAc,EAAE,kBAAkB;aACnC,CAAC;SACH,CAAC;IACJ,CAAC;IAjBU,iBAAiB;QAD7B,gEAAU,EAAE;yCAGe,+DAAU;OAFzB,iBAAiB,CAmB7B;IAAD,wBAAC;CAAA;AAnB6B;;;;;;;;;;;;;ACJ9B;AAAA;AAAA,gFAAgF;AAChF,2EAA2E;AAC3E,gEAAgE;AAEzD,IAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;GAKG;AACH,mEAAmE;;;;;;;;;;;;;ACdnE;AAAA;AAAA;AAAA;AAAA;AAA+C;AAC4B;AAE9B;AACY;AAEzD,EAAE,CAAC,CAAC,qEAAW,CAAC,UAAU,CAAC,CAAC,CAAC;IAC3B,oEAAc,EAAE,CAAC;AACnB,CAAC;AAED,gGAAsB,EAAE,CAAC,eAAe,CAAC,yDAAS,CAAC;KAChD,KAAK,CAAC,aAAG,IAAI,cAAO,CAAC,GAAG,CAAC,GAAG,CAAC,EAAhB,CAAgB,CAAC,CAAC","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\"","module.exports = \"<button class=\\\"btn btn-primary\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#collapseExample\\\" aria-expanded=\\\"false\\\"\\n  aria-controls=\\\"collapseExample\\\">\\n  Button with data-target\\n</button>\\n<div class=\\\"collapse\\\" id=\\\"collapseExample\\\">\\n  <div class=\\\"card card-body\\\">\\n    Anim pariatur cliche reprehenderit, enim eiusmod high life accusamus terry richardson ad squid. Nihil anim keffiyeh\\n    helvetica, craft beer labore wes anderson cred nesciunt sapiente ea proident.\\n  </div>\\n</div>\\n\\n<h2 class=\\\"mt-3\\\">Results</h2>\\n<div *ngFor=\\\"let result of results.data\\\">\\n  <div class=\\\"row mb-3\\\">\\n    <div *ngFor=\\\"let value of result\\\" class=\\\"col-md-2 mb-1\\\">{{ value }}</div>\\n  </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { StatisticsService } from './statistics.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\n\n  public results;\n\n  constructor(private statisticsService: StatisticsService) {this.results = [];}\n\n  ngOnInit() {\n    this.getStatistics();\n  }\n\n  getStatistics() {\n    this.statisticsService.list().subscribe(\n      data => {\n        this.results = data;\n      },\n      err => console.error(err),\n      () => console.log('done loading results')\n    );\n  }\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\nimport { FormsModule } from '@angular/forms';\n\nimport { AppComponent } from './app.component';\nimport { StatisticsService } from './statistics.service';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule, FormsModule, HttpClientModule\n  ],\n  providers: [StatisticsService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\n\n@Injectable()\nexport class StatisticsService {\n\n  constructor(private http: HttpClient) {\n  }\n\n  // Uses http.get() to load data from a single API endpoint\n  list() {\n    return this.http.get('/api/stats');\n  }\n\n  // helper function to build the HTTP headers\n  getHttpOptions() {\n    return {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n      })\n    };\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}